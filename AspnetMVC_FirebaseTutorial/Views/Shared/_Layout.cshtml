<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Asp.Net MVC - Firebase Tutorial</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />

    <script src="~/Scripts/modernizr-custom.js"></script>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Asp.Net MVC - Firebase Tutorial</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                    <partial name="_LoginPartial" />
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Asp.Net MVC - Firebase Tutorial", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                </ul>
            </div>
        </div>
    </div>

    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>
    <script src="https://www.gstatic.com/firebasejs/8.1.1/firebase-app.js" type="text/javascript"></script>
    <script src="https://www.gstatic.com/firebasejs/8.1.1/firebase-messaging.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script>
        $(function () {
            var token = null;
            var config = {
                apiKey: "AIzaSyDRr1WqIf33SZ0-O6rq9aJ5Mhd2Wcesz7o",
                authDomain: "messageapp-be75d.firebaseapp.com",
                databaseURL: "https://messageapp-be75d.firebaseio.com",
                projectId: "messageapp-be75d",
                storageBucket: "messageapp-be75d.appspot.com",
                messagingSenderId: "448938960182",
                appId: "1:448938960182:web:883c9a6a3977e602f1bf97"
            };
            // Initialize Firebase
            firebase.initializeApp(config);



            if ('serviceWorker' in navigator) {
                navigator.serviceWorker.register('../firebase-messaging-sw.js')
                    .then(function (registration) {
                        console.log("Service Worker Registered");
                        messaging.useServiceWorker(registration);
                    });
            }

            const messaging = firebase.messaging();

            messaging.requestPermission()
                .then(function () {
                    console.log("granted");
                    if (isTokenSentToServer()) {
                        console.log("already granted");
                    } else {
                        getRegtoken();
                    }
                });

         

            function getRegtoken() {
                messaging.getToken().then((currentToken) => {
                    if (currentToken) {
                        console.log(currentToken);
                        setTokenSentToServer(true);
                        saveToken(currentToken);
                        //updateUIForPushEnable(currentTokem);
                    }
                    else {
                        console.log('No Instance ID token available. Request permission to generate one.');
                        setTokenSentToServer(false);
                    }
                }).catch((err) => {
                    console.log('An error occurred while retrievig token.', err);
                    setTokenSentToServer(false);
                });
            }

            function setTokenSentToServer(sent) {
                window.localStorage.setItem('sentToServer', sent ? 1 : 0);
            }
            function isTokenSentToServer() {
                return window.localStorage.getItem('sentToServer') == '1';
            }

            messaging.onMessage(function (payload) {
                console.log('Message recevived.', payload);

                notificationTitle = payload.data.title;
                notificationOptions = {
                    body: payload.data.body,
                    icon: payload.data.icon
                };
            });
        });
    </script>
</body>
</html>